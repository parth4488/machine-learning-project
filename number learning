from sklearn.datasets import load_digits
from sklearn.model_selection import train_test_split
import numpy as np

import matplotlib.pyplot as plt
import seaborn as sns
from sklearn import metrics
%matplotlib inline
digits=load_digits()
print("Image",digits.data.shape)
print("Label",digits.target.shape)

import numpy as np
import matplotlib.pyplot as plt

plt.figure(figsize=(20,4))
for index,(image,label) in enumerate(zip(digits.data[0:5],digits.target[0:5])):
    plt.subplot(1,6,index+1)
    plt.imshow(np.reshape(image,(8,8)),cmap=plt.cm.gray)
    plt.title('Training: %i \n'%label,fontsize=20)
    
from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(digits.data, digits.target, test_size=0.23, random_state=2)

print(x_train.shape)
print(y_train.shape)
print(x_test.shape)
print(y_test.shape)

from sklearn.linear_model import LogisticRegression
logisticRegr=LogisticRegression()
logisticRegr.fit(x_train,y_train)

print(logisticRegr.predict(x_test[0].reshape(1,-1)))

logisticRegr.predict(x_test[0:10])

predictions=logisticRegr.predict(x_test)

score=logisticRegr.score(x_test,y_test)
score

import matplotlib.pyplot as plt
import seaborn as sns
from sklearn import metrics


cm=metrics.confusion_matrix(y_test,predictions)
cm

plt.figure(figsize=(9,9))
sns.heatmap(cm, annot=True, fmt=".3f", linewidths=.5, square=True, cmap='Blues_r');
plt.ylabel('Actual label');
plt.xlabel('Predicted label');
all_simple_title='Accuracy Score: [0.94]'.format(score)
plt.title(all_simple_title,size=15);


import matplotlib.pyplot as plt
import numpy as np
import seaborn as sns
from sklearn import metrics
index = 0
misclassifiedIndex = []
for predict, actual in zip(predictions,y_test):
    if predict==actual:
        misclassifiedIndex.append(index)
    index +=1
plt.figure(figsize=(20,3))
for plotIndex, wrong in enumerate(misclassifiedIndex[4:8]):
    plt.subplot(1,4,plotIndex +1)
    plt.imshow(np.reshape(x_test[wrong],(8,8)))
    plt.title("Predicted: {}, Actual: {}".format(predictions[wrong],y_test[wrong]),fontsize=20)
